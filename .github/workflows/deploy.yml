name: Deploy WMSTunning

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 1) Instalar deps y construir TODO en la raíz del repo
      - name: Install deps & build
        run: |
          npm ci
          npm run build              # <-- debe generar dist/index.js
          npm prune --omit=dev       # <-- deja sólo deps de producción

      # 2) Preparar carpeta de release con SOLO runtime
      - name: Stage runtime files
        run: |
          rm -rf .release && mkdir -p .release
          cp package.json package-lock.json .release/ || true
          cp -r dist .release/dist
          cp -r node_modules .release/node_modules

      # (Opcional) Huella del commit para verificar en prod
      - name: Write version
        run: echo "${{ github.sha }}" > .release/dist/version.txt || true

      # 3) Empaquetar lo que irá a /home/site/wwwroot
      - name: Zip app
        run: |
          cd .release
          test -f dist/index.js || (echo "ERROR: dist/index.js no existe"; ls -R dist; exit 1)
          zip -r $GITHUB_WORKSPACE/app.zip .

      # 4) Login a Azure
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_XXXXXXXX }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_XXXXXXXX }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_XXXXXXXX }}

      # 5) Deploy al App Service (OneDeploy / Run From Package)
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: WMSTunning
          package: app.zip
